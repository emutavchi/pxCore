"use strict";var isDuk="undefined"!=typeof Duktape,isV8="undefined"!=typeof _isV8,isJSC="undefined"!=typeof _isJSC,Logger=require("rcvrcore/Logger").Logger,SceneModuleLoader=require("rcvrcore/SceneModuleLoader"),log=new Logger("AsyncFileAcquisition");function AsyncFileAcquisition(a){this.scene=a,this.requestMap={}}AsyncFileAcquisition.prototype.acquire=function(a){var b=this;return new Promise(function(c,d){if(b.requestMap.hasOwnProperty(a)){log.message(4,"ACQUISITION: adding listener for existing request: "+a);var e=b.requestMap[a];e.listeners.push(function(a,b){"resolve"===a?c(e.moduleLoader):d(b)})}else{var f=new SceneModuleLoader;b.requestMap[a]={status:"acquiring",moduleLoader:f,listeners:[]};var g=b;log.message(4,"ACQUISITION: adding requestor for: "+a),f.loadScenePackage(b.scene,{fileUri:a}).then(function(){log.message(4,"---> ACQUIRED: "+a),c(f);var b=g.requestMap[a].listeners;if(null!==b&&0!==b.length)for(var d=0;d<b.length;++d)b[d]("resolve");g.requestMap[a].listeners=null,delete g.requestMap[a],isDuk||isV8||isJSC||process._tickCallback()}).catch(function(b){console.error("Error"),console.error("AsyncFileAcquisition - Error: could not load file "+a+", error="+b),d(b);var c=g.requestMap[a].listeners;if(null!==c&&0!==c.length)for(var e=0;e<c.length;++e)c[e]("reject",b);g.requestMap[a].listeners=null,delete g.requestMap[a]})}})},module.exports=AsyncFileAcquisition;