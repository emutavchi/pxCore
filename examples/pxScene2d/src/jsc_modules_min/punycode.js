'use strict';const maxInt=2147483647,base=36,tMin=1,tMax=26,skew=38,damp=700,initialBias=72,initialN=128,delimiter="-",regexPunycode=/^xn--/,regexNonASCII=/[^\x20-\x7E]/,regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,errors={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},baseMinusTMin=base-tMin,floor=Math.floor,stringFromCharCode=String.fromCharCode;function error(a){throw new RangeError(errors[a])}function map(a,b){const c=[];for(length=a.length;length--;)c[length]=b(a[length]);return c}function mapDomain(a,b){const c=a.split("@");result="",1<c.length&&(result=c[0]+"@",a=c[1]),a=a.replace(regexSeparators,".");const d=a.split("."),e=map(d,b).join(".");return result+e}function ucs2decode(a){const b=[];counter=0;for(const c=a.length;counter<c;){const d=a.charCodeAt(counter++);if(55296<=d&&56319>=d&&counter<c){const c=a.charCodeAt(counter++);56320==(64512&c)?b.push(((1023&d)<<10)+(1023&c)+65536):(b.push(d),counter--)}else b.push(d)}return b}const basicToDigit=function(a){return 10>a-48?a-22:26>a-65?a-65:26>a-97?a-97:base},digitToBasic=function(a,b){return a+22+75*(26>a)-((0!=b)<<5)},adapt=function(a,b,c){for(k=0,a=c?floor(a/damp):a>>1,a+=floor(a/b);a>baseMinusTMin*tMax>>1;k+=base)a=floor(a/baseMinusTMin);return floor(k+(baseMinusTMin+1)*a/(a+skew))},encode=function(a){const b=[];a=ucs2decode(a);var c=a.length,d=initialN,e=0,f=initialBias;const g=a.length;for(var h=0;h<g;){const c=a.charCodeAt(h++);128>c&&b.push(stringFromCharCode(c))}var i=b.length,j=i;for(i&&b.push(delimiter);j<c;){for(var l=maxInt,h=0;h<g;){const b=a.charCodeAt(h++);b>=d&&b<l&&(l=b)}const c=j+1;l-d>floor((maxInt-e)/c)&&error("overflow"),e+=(l-d)*c,d=l;for(var o=0;o<g;){const g=a.charCodeAt(o++);if(g<d&&++e>maxInt&&error("overflow"),g==d){for(var p=e,r=base;;r+=base){const a=r<=f?tMin:r>=f+tMax?tMax:r-f;if(p<a)break;const c=p-a,d=base-a;b.push(stringFromCharCode(digitToBasic(a+c%d,0))),p=floor(c/d)}b.push(stringFromCharCode(digitToBasic(p,0))),f=adapt(e,c,j==i),e=0,++j}}++e,++d}return b.join("")},toUnicode=function(a){return mapDomain(a,function(a){return regexPunycode.test(a)?decode(a.slice(4).toLowerCase()):a})},toASCII=function(a){return mapDomain(a,function(a){return regexNonASCII.test(a)?"xn--"+encode(a):a})},punycode={version:"2.0.0",toASCII:toASCII};module.exports=punycode;